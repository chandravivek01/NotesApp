{"ast":null,"code":"var _jsxFileName = \"/Users/vivekchandra/Desktop/dev/notes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport NoteContainer from './components/note_container/NoteContainer';\nimport Sidebar from './components/sidebar/Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState(JSON.parse(localStorage.getItem('NOTES-APP')) || []);\n  const addNotes = color => {\n    const tempNotes = [...notes];\n    tempNotes.push({\n      id: Date.now() + \"\" + Math.floor(Math.random() * 78),\n      title: \"\",\n      text: \"\",\n      time: Date.now(),\n      color\n    });\n    setNotes(tempNotes);\n  };\n  const deleteNote = id => {\n    const tempNotes = [...notes];\n    const index = tempNotes.findIndex(item => item.id === id);\n    if (index < 0) return;\n    tempNotes.splice(index, 1);\n    setNotes(tempNotes);\n  };\n  const updateText = (text, id) => {\n    const tempNotes = [...notes];\n    const index = tempNotes.findIndex(item => item.id === id);\n    if (index < 0) return;\n    tempNotes[index].text = text;\n    setNotes(tempNotes);\n  };\n  useEffect(() => {\n    localStorage.setItem('NOTES-APP', JSON.stringify(notes));\n  }, [notes]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_main\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        addNotes: addNotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoteContainer, {\n        notes: notes,\n        deleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"07NWM38kM1gB6hWo4SN9t23J64g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","NoteContainer","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","notes","setNotes","JSON","parse","localStorage","getItem","addNotes","color","tempNotes","push","id","Date","now","Math","floor","random","title","text","time","deleteNote","index","findIndex","item","splice","updateText","setItem","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vivekchandra/Desktop/dev/notes-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport NoteContainer from './components/note_container/NoteContainer';\nimport Sidebar from './components/sidebar/Sidebar';\n\nfunction App() {\n\n  const [notes, setNotes] = useState(JSON.parse(localStorage.getItem('NOTES-APP')) || []);\n\n  const addNotes = (color) => {\n\n      const tempNotes = [...notes];\n      tempNotes.push({\n        id: Date.now()+\"\"+Math.floor(Math.random()*78),\n        title: \"\",\n        text: \"\",\n        time: Date.now(),\n        color \n      });\n      setNotes(tempNotes);\n  };\n\n  const deleteNote= (id) => {\n\n    const tempNotes = [...notes];\n    const index = tempNotes.findIndex(item => item.id===id);\n    if (index<0) \n      return;\n    \n    tempNotes.splice(index, 1);\n    setNotes(tempNotes);\n  };\n\n  const updateText = (text, id) => {\n\n    const tempNotes = [...notes];\n    const index = tempNotes.findIndex(item => item.id===id);\n    if (index<0) \n      return;\n\n    tempNotes[index].text = text;\n    setNotes(tempNotes);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('NOTES-APP', JSON.stringify(notes))\n  }, [notes])\n\n  return (\n    <>\n      <div className=\"app_main\">\n        <Sidebar addNotes={addNotes} />\n        <NoteContainer  notes={notes} deleteNote={deleteNote} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,2CAA2C;AACrE,OAAOC,OAAO,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACW,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;EAEvF,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IAExB,MAAMC,SAAS,GAAG,CAAC,GAAGR,KAAK,CAAC;IAC5BQ,SAAS,CAACC,IAAI,CAAC;MACbC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAC,EAAE,GAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,EAAE,CAAC;MAC9CC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;MAChBL;IACF,CAAC,CAAC;IACFN,QAAQ,CAACO,SAAS,CAAC;EACvB,CAAC;EAED,MAAMW,UAAU,GAAGT,EAAE,IAAK;IAExB,MAAMF,SAAS,GAAG,CAAC,GAAGR,KAAK,CAAC;IAC5B,MAAMoB,KAAK,GAAGZ,SAAS,CAACa,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACZ,EAAE,KAAGA,EAAE,CAAC;IACvD,IAAIU,KAAK,GAAC,CAAC,EACT;IAEFZ,SAAS,CAACe,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IAC1BnB,QAAQ,CAACO,SAAS,CAAC;EACrB,CAAC;EAED,MAAMgB,UAAU,GAAGA,CAACP,IAAI,EAAEP,EAAE,KAAK;IAE/B,MAAMF,SAAS,GAAG,CAAC,GAAGR,KAAK,CAAC;IAC5B,MAAMoB,KAAK,GAAGZ,SAAS,CAACa,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACZ,EAAE,KAAGA,EAAE,CAAC;IACvD,IAAIU,KAAK,GAAC,CAAC,EACT;IAEFZ,SAAS,CAACY,KAAK,CAAC,CAACH,IAAI,GAAGA,IAAI;IAC5BhB,QAAQ,CAACO,SAAS,CAAC;EACrB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdc,YAAY,CAACqB,OAAO,CAAC,WAAW,EAAEvB,IAAI,CAACwB,SAAS,CAAC1B,KAAK,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA,CAAAE,SAAA;IAAA8B,QAAA,eACEhC,OAAA;MAAKiC,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACvBhC,OAAA,CAACF,OAAO;QAACa,QAAQ,EAAEA;MAAS;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/BrC,OAAA,CAACH,aAAa;QAAEQ,KAAK,EAAEA,KAAM;QAACmB,UAAU,EAAEA;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD;EAAC,gBACN,CAAC;AAEP;AAACjC,EAAA,CAnDQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}